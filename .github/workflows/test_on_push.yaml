name: "Test"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  core-tests:
    name: "jobbergate-core tests"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.5.1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
          architecture: "x64"
          cache: "poetry"
          cache-dependency-path: |
            jobbergate-core/poetry.lock
            jobbergate-core/pyproject.toml
      - name: "run quality control checks"
        working-directory: jobbergate-core
        run: |
          poetry env use "3.8"
          make qa

  api-tests:
    name: "jobbergate-api tests"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - name: Run QA
        working-directory: ./jobbergate-composed
        run: docker-compose build jobbergate-api-qa && docker-compose run --rm jobbergate-api-qa

  cli-tests:
    name: "jobbergate-cli tests"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        id: cp36
        with:
          python-version: "3.6"
          architecture: "x64"
      - name: "run quality control checks"
        working-directory: jobbergate-cli
        # This workaround is required to ensure poetry is installed on 3.6
        run: |
          ${{ steps.cp36.outputs.python-path }} -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          python -m pip install poetry==1.1.14
          make qa
