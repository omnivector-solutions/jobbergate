name: "Test"

on:
  push:
    branches:
      - main
      - release/**
  pull_request:

jobs:
  core-tests:
    name: "jobbergate-core tests"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.5.1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"
          cache: "poetry"
          cache-dependency-path: |
            jobbergate-core/poetry.lock
            jobbergate-core/pyproject.toml
            .github/workflows/test_on_push.yaml
      - name: "run quality control checks"
        working-directory: jobbergate-core
        run: |
          poetry env use "3.10"
          make qa

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          working-directory: jobbergate-core
          flags: core
          env_vars: OS,PYTHON
          token: ${{ secrets.CODECOV_TOKEN }}
          file: tests/coverage.xml
          disable_search: true
          fail_ci_if_error: true

  api-tests:
    name: "jobbergate-api tests"
    runs-on: "ubuntu-20.04"
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: Run QA
        working-directory: ./jobbergate-composed
        run: docker compose build jobbergate-api-qa && docker compose run --rm jobbergate-api-qa

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          working-directory: jobbergate-api
          flags: api
          env_vars: OS,PYTHON
          token: ${{ secrets.CODECOV_TOKEN }}
          file: tests/coverage.xml
          disable_search: true
          fail_ci_if_error: true

  cli-tests:
    name: "jobbergate-cli tests"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.5.1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"
          cache: "poetry"
          cache-dependency-path: |
            jobbergate-cli/poetry.lock
            jobbergate-cli/pyproject.toml
            .github/workflows/test_on_push.yaml
      - name: "run quality control checks"
        working-directory: jobbergate-cli
        run: |
          poetry env use "3.10"
          make qa

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          working-directory: jobbergate-cli
          flags: cli
          env_vars: OS,PYTHON
          token: ${{ secrets.CODECOV_TOKEN }}
          file: tests/coverage.xml
          disable_search: true
          fail_ci_if_error: true

  agent-tests:
    name: "jobbergate-agent tests"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: 1.5.1
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: "x64"
          cache: "poetry"
          cache-dependency-path: |
            jobbergate-agent/poetry.lock
            jobbergate-agent/pyproject.toml
            .github/workflows/test_on_push.yaml
      - name: "run quality control checks"
        working-directory: jobbergate-agent
        run: |
          poetry env use "3.10"
          make qa

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          working-directory: jobbergate-agent
          flags: agent
          env_vars: OS,PYTHON
          token: ${{ secrets.CODECOV_TOKEN }}
          file: tests/coverage.xml
          disable_search: true
          fail_ci_if_error: true

  agent-snap-tests:
    name: "jobbergate-agent-snap tests"
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12.3"
          architecture: "x64"
          cache: "pip"
          cache-dependency-path: |
            .github/workflows/test_on_push.yaml
      - name: "run quality control checks"
        working-directory: jobbergate-agent-snap
        run: |
          python -m pip install tox==4.20.0
          make qa
