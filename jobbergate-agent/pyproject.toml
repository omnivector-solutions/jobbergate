[tool.poetry]
name = "jobbergate-agent"
version = "5.3.0a2"
description = "Jobbergate Agent"
authors = ["Omnivector Solutions <info@omnivector.solutions>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/omnivector-solutions/jobbergate"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
    "Topic :: Scientific/Engineering",
]
packages = [{ include = "jobbergate_agent" }]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/omnivector-solutions/jobbergate/issues"
"Changelog" = "https://github.com/omnivector-solutions/jobbergate/blob/main/jobbergate-agent/CHANGELOG.rst"

[tool.poetry.dependencies]
python = "^3.10"
jobbergate-core = { path = "../jobbergate-core", develop = true }
apscheduler = "3.10.3"
httpx = "0.24.1"
importlib-metadata = { version = "^6.8.0", python = "<3.10" }
loguru = "0.6.0"
py-buzz = "^4.0.0"
pydantic = "^2.7"
pyjwt = "^2.8.0"
python-dotenv = "^1.0.0"
python-jose = "3.3.0"
sentry-sdk = "^1.1.0"
auto-name-enum = "^2.0.0"
pydantic-settings = "^2.3.3"

[tool.stickywheel]
# This will resolve the relative path to the jobbergate-core package at build time
# and pin its version based on the version in the jobbergate-agent pyproject.toml file.
# Since it is at build time, there is no need to install the pluging on dev machines,
# the deployment workflow will take care of it.
# Reference: https://github.com/python-poetry/poetry/issues/6850#issuecomment-1445477319
strategy = "exact"

[tool.poetry.scripts]
jg-run = "jobbergate_agent.main:main"

[tool.poetry.plugins.'jobbergate_agent.tasks']
active-jobs = 'jobbergate_agent.tasks:active_submissions_task'
pending-jobs = 'jobbergate_agent.tasks:pending_submissions_task'
report-status = 'jobbergate_agent.tasks:status_report_task'
garbage-collection = 'jobbergate_agent.tasks:garbage_collection_task'
self-update = 'jobbergate_agent.tasks:self_update_task'

[tool.poetry.plugins.'jobbergate_agent.user_mapper']
single-user-mapper = "jobbergate_agent.utils.user_mapper:SingleUserMapper"

[tool.poetry.dev-dependencies]
asynctest = "^0.13.0"
freezegun = "^1.2.2"
mypy = "^1.10"
pytest-asyncio = "^0.18.2"
pytest-cov = "^4.0.0"
pytest-env = "^0.6.2"
pytest-mock = "^3.7.0"
pytest-random-order = "^1.0.4"
requests-mock = "^1.10"
respx = "^0.20.1"
ruff = "^0.4.9"

[tool.ruff]
line-length = 120

[tool.pytest.ini_options]
minversion = "7.0"
asyncio_mode = "auto"
addopts = [
    "--random-order",
    "--cov=jobbergate_agent",
    "--cov-report=term",
    "--cov-report=xml:tests/coverage.xml",
]
env = [
    "JOBBERGATE_AGENT_OIDC_DOMAIN = auth.com",
    "JOBBERGATE_AGENT_OIDC_CLIENT_ID = DUMMY-TEST-CLIENT-ID",
    "JOBBERGATE_AGENT_OIDC_CLIENT_SECRET = DUMMY-TEST-CLIENT-SECRET",
]

[tool.coverage.report]
fail_under = 90
show_missing = true

[tool.mypy]
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = ["dataclasses", "toml", "requests", "jose.*", "apscheduler.*"]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
