[tool.poetry]
authors = [
    "Lucas de Carvalho <lucas.carvalho@omnivector.solutions>"
]
name = "jobbergate-api"
description = "Jobbergate API"
license = "MIT"
version = "2.0.1"

[tool.poetry.dependencies]
python = "^3.8"
fastapi = "^0.68.0"
email_validator = "^1.1.0"
psycopg2 = "^2.9.1"
passlib = "^1.7.2"
python-multipart = "^0.0.5"
python-dotenv = "^0.16.0"
mangum = "^0.11.0"
databases = {extras = ["sqlite"], version = "^0.4.3"}
boto3 = "^1.17.51"
Jinja2 = "^2.11.3"
asyncpg = "^0.22.0"
loguru = "^0.5.3"
uvicorn = "^0.15.0"
armasec = "^0.7.3"
sentry-sdk = "^1.5.0"
yarl = "^1.7.2"

[tool.poetry.dev-dependencies]
black = { version = "^19", allow-prereleases = true }
pre-commit = "^2.9.2"
pytest = "^6.2"
pytest-asyncio = "^0.12"
pytest-cov = "^2.8"
python-status = "i^1.0"
requests = "^2.23.0"
nest_asyncio = "^1.3.3"
coverage = "^5.1"
pgcli = "^3.1.0"
ipython = "^7.26.0"
pytest-freezegun = "^0.4.2"
pytest-env = "^0.6.2"
asgi-lifespan = "^1.0.1"
pytest-random-order = "^1.0.4"
flake8 = "^3.9.2"
mypy = "^0.910"
sqlalchemy-stubs = "^0.4"
isort = "^5.9.3"
respx = "^0.17.1"

[tool.poetry.scripts]
db-login = "bin.db_login:login"

[tool.black]
line-length = 110

[tool.isort]
line_length = 110
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
known_localfolder = "jobbergateapi2,apps,tests"
skip_glob = "migrations/*"
sections = "FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
default_section = "THIRDPARTY"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--random-order",
    "--cov=jobbergate_api",
    "--cov-report=term-missing",
    "--cov-fail-under=95",
]
testpaths = ["jobbergate_api/tests"]
env = [
    "DATABASE_URL = sqlite:///sqlite-testing.db",
    "TEST_ENV = True",

    # This setting must align with the rs256_domain fixture from armasec's pytest extension
    "ARMASEC_DOMAIN = armasec.dev",
    "ARMASEC_DEBUG = True",
]

[[tool.mypy.overrides]]
module = [
    "boto3",
    "botocore.*",
    "jinja2",
    "asyncpg.*",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
