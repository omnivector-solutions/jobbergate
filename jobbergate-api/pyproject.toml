[tool.poetry]
name = "jobbergate-api"
version = "3.5.0-alpha.0"
description = "Jobbergate API"
authors = ["Omnivector Solutions <info@omnivector.solutions>"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/omnivector-solutions/jobbergate"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Development Status :: 5 - Production/Stable",
    "Framework :: FastAPI",
    "Topic :: Scientific/Engineering",
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/omnivector-solutions/jobbergate/issues"
"Changelog" = "https://github.com/omnivector-solutions/jobbergate/blob/main/jobbergate-api/CHANGELOG.rst"

[tool.poetry.dependencies]
python = "^3.8"
fastapi = "^0.68.0"
email_validator = "^1.1.0"
passlib = "^1.7.2"
python-multipart = "^0.0.5"
python-dotenv = "^0.20.0"
boto3 = "^1.17.51"
Jinja2 = "^3.0.3"
asyncpg = "^0.22.0"
loguru = "^0.6.0"
uvicorn = "^0.15.0"
armasec = "^0.11.0"
sentry-sdk = "^1.5.0"
yarl = "^1.7.2"
alembic = "^1.7.5"
typer = "^0.4.0"
databases = {extras = ["postgresql"], version = "^0.5.5"}
PyYAML = "^6.0"
sendgrid = "^6.9.7"
file-storehouse = "0.5.0"
py-buzz = "^3.2.1"
toml = "^0.10.2"
bidict = "^0.22.0"

[tool.poetry.dev-dependencies]
black = "^22"
pre-commit = "^2.9.2"
pytest = "^6.2"
pytest-asyncio = "^0.12"
pytest-cov = "^2.8"
python-status = "^1.0"
requests = "^2.23.0"
nest_asyncio = "^1.3.3"
coverage = "^5.1"
pgcli = "^3.1.0"
ipython = "^7.31.1"
pytest-freezegun = "^0.4.2"
pytest-env = "^0.6.2"
asgi-lifespan = "^1.0.1"
pytest-random-order = "^1.0.4"
mypy = "^0.910"
sqlalchemy-stubs = "^0.4"
isort = "^5.9.3"
respx = "^0.17.1"
py-docker-gadgets = "^0.1.1"
pyproject-flake8 = "^0.0.1-alpha.2"
flake8-docstrings = "^1.6.0"
psycopg2 = "^2.9.5"

[tool.poetry.scripts]
dev-tools = "dev_tools:app"

[tool.black]
line-length = 110

[tool.isort]
line_length = 110
multi_line_output = 3
include_trailing_comma = true

[tool.flake8]
max_line_length = 110
exclude = "alembic/*"
ignore = "D200,D106,D402"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["--random-order", "--cov=jobbergate_api"]
testpaths = ["jobbergate_api/tests"]
env = [
    "DEPLOY_ENV = TEST",  # Enforces that test database env vars will be used
    "ARMASEC_DOMAIN = armasec.dev",  # Must align with the rs256_domain fixture in armasec's pytest extension
    "ARMASEC_DEBUG = False",  # Set this to True to debug armasec issues by seeing verbose logging
    "SENDGRID_FROM_EMAIL = info@pytesting.com",
    "SENDGRID_API_KEY = test-api-key",
]

[tool.coverage.report]
    fail_under = 95
    show_missing = true

[[tool.mypy.overrides]]
module = [
    "boto3",
    "botocore.*",
    "uvicorn",
    "asyncpg.*",
    "yaml",
    "toml",
    "sendgrid.*",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
