# coding: utf-8

"""
    Jobbergate-API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 4.3.0a1
    Contact: info@omnivector.solutions
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.job_properties import JobProperties  # noqa: E501

class TestJobProperties(unittest.TestCase):
    """JobProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobProperties:
        """Test JobProperties
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobProperties`
        """
        model = JobProperties()  # noqa: E501
        if include_optional:
            return JobProperties(
                account = None,
                account_gather_frequency = None,
                argv = None,
                array = None,
                batch_features = None,
                begin_time = None,
                burst_buffer = None,
                cluster_constraints = None,
                comment = None,
                constraints = None,
                container = None,
                core_specification = None,
                cores_per_socket = None,
                cpu_binding = None,
                cpu_binding_hint = None,
                cpu_frequency = None,
                cpus_per_gpu = None,
                cpus_per_task = None,
                current_working_directory = None,
                deadline = None,
                delay_boot = None,
                dependency = None,
                distribution = None,
                environment = {
                    'key' : null
                    },
                exclusive = user,
                get_user_environment = None,
                gres = None,
                gres_flags = disable-binding,
                gpu_binding = None,
                gpu_frequency = None,
                gpus = None,
                gpus_per_node = None,
                gpus_per_socket = None,
                gpus_per_task = None,
                hold = None,
                kill_on_invalid_dependency = None,
                licenses = None,
                mail_type = None,
                mail_user = None,
                mcs_label = None,
                memory_binding = None,
                memory_per_cpu = None,
                memory_per_gpu = None,
                memory_per_node = None,
                minimum_cpus_per_node = None,
                minimum_nodes = None,
                name = None,
                nice = None,
                no_kill = None,
                nodes = None,
                open_mode = append,
                partition = None,
                priority = None,
                qos = None,
                requeue = None,
                reservation = None,
                signal = None,
                sockets_per_node = None,
                spread_job = None,
                standard_error = None,
                standard_input = None,
                standard_output = None,
                tasks = None,
                tasks_per_core = None,
                tasks_per_node = None,
                tasks_per_socket = None,
                thread_specification = None,
                threads_per_core = None,
                time_limit = None,
                time_minimum = None,
                wait_all_nodes = None,
                wckey = None
            )
        else:
            return JobProperties(
        )
        """

    def testJobProperties(self):
        """Test JobProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
